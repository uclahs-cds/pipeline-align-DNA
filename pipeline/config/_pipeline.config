manifest {
    name = "align-DNA"
    author = "Benjamin Carlin"
    description = "alignment pipeline for paired fastqs DNA samples"
    version = "4.1.0"
}

params {
    bwa_version = "bwa-mem2-2.0"
}

methods {
    set_bam_and_log_output = {
        if (params.blcds_registered_dataset) {
            def fastqs = []
            def reader = new FileReader(params.input_csv)
            reader.splitEachLine(",") { fields ->
                fastqs.add(fields[8])
            }
            fastqs.removeAt(0)
            def pattern = ~/^(?<baseDir>(?<mntDir>\/\w+)\/data\/(?<diseaseId>\w+)\/(?<datasetId>\w+)\/(?<patientId>\w+)\/(?<sampleId>[A-Za-z0-9-]+)\/.+)\/raw\/FASTQ\/.+$/
            base_dirs = fastqs.each {
                def matcher = it =~ pattern
                if (!matcher.matches()) {
                    throw new Exception("The input path ${it} isn't a valid blcds-registered path.")
                }
                return matcher.group("baseDir")
            }
            .unique(false)
            
            if (base_dirs.size() > 1) {
                throw new Exception("Not all input fastq files are from the same blcds-registered sample. Please verify.")
            }

            def matcher = fastqs[0] =~ pattern
            matcher.matches()
            def base_dir = matcher.group("baseDir")

            params.blcds_disease_id = matcher.group("diseaseId")
            params.blcds_dataset_id = matcher.group("datasetId")
            params.blcds_patient_id = matcher.group("patientId")
            params.blcds_sample_id  = matcher.group("sampleId")

            def date = new Date().format( 'yyyy-MM-dd' )

            params.bam_output_dir = "${base_dir}/aligned/${params.reference_genome_version}/BAM/"
            params.bam_output_filename = "${params.bwa_version.toUpperCase()}_${params.blcds_dataset_id}-${params.blcds_sample_id}.bam"
            params.log_output_dir = "${base_dir}/aligned/${params.reference_genome_version}/log/align-DNA/${date}/"
        } else {
            params.bam_output_dir = params.output_dir
            params.bam_output_filename = "${params.sample_name}.bam"
            params.log_outptu_dir = params.output_dir
        }
    }
}