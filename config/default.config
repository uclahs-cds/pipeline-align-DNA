import nextflow.util.SysHelper

// Default inputs/parameters of the pipeline
params {

    max_cpus   = SysHelper.getAvailCpus()
    max_memory = SysHelper.getAvailMemory()

    ucla_cds = true

    // Set to false in sample-specific config file to not mark duplicates
    mark_duplicates = true

    // tools and their versions
    bwa_version = "BWA-MEM2-2.2.1"
    hisat2_version = "HISAT2-2.2.1"
    pipeval_version = "2.1.6"

    docker_image_bwa_and_samtools = "blcdsdockerregistry/bwa-mem2_samtools-1.12:2.2.1"
    docker_image_hisat2_and_samtools = "blcdsdockerregistry/hisat2_samtools-1.12:2.2.1"
    docker_image_picardtools = "blcdsdockerregistry/picard:2.26.10"
    docker_image_sha512sum = "blcdsdockerregistry/align-dna:sha512sum-1.0"
    docker_image_validate_params = "blcdsdockerregistry/validate:2.1.6"
    docker_image_gatk = "broadinstitute/gatk:4.2.4.1"
    docker_image_samtools = "blcdsdockerregistry/samtools:1.15.1"

    ucla_cds_analyte = "DNA"
    }

// Process specific scope
process {
    // Process results are stored to local cache.
    // If pipeline is launched with the 'resume' option, existing cache results will be used when available
    // rather than re-executing processes
    cache = true

    // Forward process 'stdout' to shell terminal and, consequently, the log file
    echo = true
    executor = 'local'
    
    // Other directives or options that should apply for every process

    // total amount of resources avaible to the pipeline
    cpus = params.max_cpus
    memory = params.max_memory
}

// Enable Docker and configure docker-related options like user and group IDs
docker {
    enabled = true
    uid_and_gid = "-u \$(id -u):\$(id -g)"
    all_group_ids = "\$(for i in `id --real --groups`; do echo -n \"--group-add=\$i \"; done)"

    runOptions = "${uid_and_gid} ${all_group_ids}"
    }
