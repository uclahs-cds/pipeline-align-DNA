import nextflow.util.SysHelper

// Default inputs/parameters of the pipeline
params {

    max_cpus   = SysHelper.getAvailCpus()
    max_memory = SysHelper.getAvailMemory()

    min_cpus   = 1
    min_memory = 1.MB

    ucla_cds = true

    // Set to false in sample-specific config file to not mark duplicates
    mark_duplicates = true

    gatk_command_mem_diff = 5.GB

    // tools and their versions
    bwa_version = "BWA-MEM2-2.2.1"
    hisat2_version = "HISAT2-2.2.1"

    docker_container_registry = "ghcr.io/uclahs-cds"

    docker_image_bwa_and_samtools = "${-> params.docker_container_registry}/bwa-mem2_samtools-1.12:2.2.1"
    docker_image_hisat2_and_samtools = "${-> params.docker_container_registry}/hisat2_samtools-1.12:2.2.1"
    docker_image_picardtools = "${-> params.docker_container_registry}/picard:3.0.0"
    docker_image_sha512sum = "${-> params.docker_container_registry}/bl-base:1.1.0"
    docker_image_validate_params = "${-> params.docker_container_registry}/pipeval:4.0.0-rc.2"
    docker_image_gatk = "broadinstitute/gatk:4.2.4.1"
    docker_image_samtools = "${-> params.docker_container_registry}/samtools:1.15.1"

    ucla_cds_analyte = "DNA"
    }

// Process specific scope
process {
    // Process results are stored to local cache.
    // If pipeline is launched with the 'resume' option, existing cache results will be used when available
    // rather than re-executing processes
    cache = true

    // Forward process 'stdout' to shell terminal and, consequently, the log file
    echo = true
    executor = 'local'

    // Other directives or options that should apply for every process

    // total amount of resources avaible to the pipeline
    cpus = params.max_cpus
    memory = params.max_memory
}

// Enable Docker and configure docker-related options like user and group IDs
docker {
    enabled = true
    uid_and_gid = "-u \$(id -u):\$(id -g)"
    all_group_ids = "\$(for i in `id --real --groups`; do echo -n \"--group-add=\$i \"; done)"

    runOptions = "${uid_and_gid} ${all_group_ids}"
    }
